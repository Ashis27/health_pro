webpackJsonp([26],{

/***/ 708:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BmicalculatorPageModule", function() { return BmicalculatorPageModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bmicalculator__ = __webpack_require__(939);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_svg_round_progressbar__ = __webpack_require__(914);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_angular_svg_round_progressbar___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_angular_svg_round_progressbar__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




var BmicalculatorPageModule = /** @class */ (function () {
    function BmicalculatorPageModule() {
    }
    BmicalculatorPageModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_2__bmicalculator__["a" /* BmicalculatorPage */],
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["j" /* IonicPageModule */].forChild(__WEBPACK_IMPORTED_MODULE_2__bmicalculator__["a" /* BmicalculatorPage */]), __WEBPACK_IMPORTED_MODULE_3_angular_svg_round_progressbar__["RoundProgressModule"]
            ],
        })
    ], BmicalculatorPageModule);
    return BmicalculatorPageModule;
}());

//# sourceMappingURL=bmicalculator.module.js.map

/***/ }),

/***/ 902:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BMICalculator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return BloodPressure; });
/* unused harmony export Case */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return BloodSugarConerversion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return WaistToHip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return Dailywater; });
var BMICalculator = /** @class */ (function () {
    function BMICalculator() {
    }
    BMICalculator.prototype.getResult = function (weight, heightFoot, heightInch) {
        var heightFootInmeter = heightFoot / 3.2808;
        var heightInchInmeter = heightInch / 39.370;
        var totalHeightInMeter = heightFootInmeter + heightInchInmeter;
        var res = weight / (totalHeightInMeter * totalHeightInMeter);
        //return this.checkBMIStatus(res);
        return res;
    };
    BMICalculator.prototype.checkBMIStatus = function (val) {
        if (val < 18.5) {
            return "Under Weight";
        }
        else if (val >= 18.5 && val <= 24.9) {
            return "Normal Weight";
        }
        else if (val >= 25 && val <= 29.9) {
            return "Over Weight";
        }
        else if (val >= 30 && val <= 34.9) {
            return "Class I Obese";
        }
        else if (val >= 35 && val <= 39.9) {
            return "Class II Obese";
        }
        else {
            return "Class III obese";
        }
    };
    return BMICalculator;
}());

//**************************** Blood Pressure *****************************
var BloodPressure = /** @class */ (function () {
    function BloodPressure() {
    }
    BloodPressure.prototype.calulateBloodPressure = function (age, systolic, diastolic) {
        if (age <= 60) {
            if (systolic <= 90 && diastolic <= 60) {
                return Case.case1;
            }
            else if (systolic <= 120 && diastolic <= 80) {
                return Case.case2;
            }
            else if ((systolic < 130) && diastolic <= 80) {
                return Case.case3;
            }
            else if ((systolic < 140) && (diastolic < 90)) {
                return Case.case4;
            }
            else {
                return Case.case5;
            }
        }
        else if (age > 60) {
            if (systolic <= 90 && diastolic <= 60) {
                return Case.case1;
            }
            else if (systolic <= 120 && diastolic <= 80) {
                return Case.case2;
            }
            else if ((systolic <= 130) && diastolic <= 80) {
                return Case.case3;
            }
            else if ((systolic <= 140) && (diastolic <= 90)) {
                return Case.case4;
            }
            else {
                return Case.case5;
            }
        }
    };
    return BloodPressure;
}());

var Case;
(function (Case) {
    Case["case1"] = "Hypotension(low blood pressure)";
    Case["case2"] = "Normal";
    Case["case3"] = "Elevated";
    Case["case4"] = "Hypertension (Stage1)";
    Case["case5"] = "Hypertension (Stage2)";
})(Case || (Case = {}));
//...............................................
var BloodSugarConerversion = /** @class */ (function () {
    function BloodSugarConerversion() {
        this.type = "mg/dl";
        this.classification = "fasting";
    }
    BloodSugarConerversion.prototype.calculate = function (type, classification, eAg) {
        if (classification == 'fasting') {
            if (type == 'mg/dl') {
                if (eAg < 70) {
                    return 'Low';
                }
                if (eAg <= 110) {
                    return 'Normal';
                }
                if (eAg <= 125) {
                    return "Prediabetes";
                }
                else {
                    return 'Diabetes';
                }
            }
            else if (type == 'mmol/l') {
                if (eAg < 3.89) {
                    return 'Low';
                }
                if (eAg <= 6.11) {
                    return 'Normal';
                }
                if (eAg <= 6.94) {
                    return "Prediabetes";
                }
                else {
                    return 'Diabetes';
                }
            }
        }
        else if (classification == '2Hours after meal') {
            if (type == 'mg/dl') {
                if (eAg < 70) {
                    return 'Low';
                }
                if (eAg <= 140) {
                    return 'Normal';
                }
                if (eAg <= 160) {
                    return "Prediabetes";
                }
                else {
                    return 'Diabetes';
                }
            }
            else if (type == 'mmol/l') {
                if (eAg < 3.8) {
                    return 'Low';
                }
                if (eAg < 7.7) {
                    return 'Normal';
                }
                if (eAg <= 8.88) {
                    return "Prediabetes";
                }
                else {
                    return 'Diabetes';
                }
            }
        }
    };
    return BloodSugarConerversion;
}());

//.....................................Waist To Hip........................................
var WaistToHip = /** @class */ (function () {
    function WaistToHip() {
        this.gender = "male";
    }
    WaistToHip.prototype.calculateWaistToHip = function (gender, waist, hip) {
        var ratio = waist / hip;
        switch (gender) {
            case 'male': {
                if (ratio <= 0.95) {
                    return 'Normal';
                }
                else if (ratio <= 1.0) {
                    return 'Moderate risk';
                }
                else {
                    return 'High risk';
                }
            }
            case 'female': {
                if (ratio <= 0.80) {
                    return 'Normal';
                }
                else if (ratio <= 0.84) {
                    return 'Moderate risk';
                }
                else {
                    return 'High risk';
                }
            }
        }
    };
    return WaistToHip;
}());

//....................................Daily Water....................................
var Dailywater = /** @class */ (function () {
    function Dailywater() {
        this.sex = "male";
    }
    Dailywater.prototype.calculatedailywater = function (weight) {
        var litWater = (weight / 0.024) / 1000;
        return Math.ceil(litWater) + 1;
    };
    return Dailywater;
}());

//# sourceMappingURL=Calculator.js.map

/***/ }),

/***/ 903:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var platform_browser_1 = __webpack_require__(37);
var DEGREE_IN_RADIANS = Math.PI / 180;
var RoundProgressService = (function () {
    function RoundProgressService(document) {
        this.supportsSvg = !!(document &&
            document.createElementNS &&
            document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);
        this._base = document && document.head.querySelector('base');
        this._hasPerf = typeof window !== 'undefined' &&
            window.performance &&
            window.performance.now &&
            typeof window.performance.now() === 'number';
    }
    /**
     * Resolves a SVG color against the page's `base` tag.
     */
    RoundProgressService.prototype.resolveColor = function (color) {
        if (this._base && this._base.href) {
            var hashIndex = color.indexOf('#');
            if (hashIndex > -1 && color.indexOf('url') > -1) {
                return color.slice(0, hashIndex) + location.href + color.slice(hashIndex);
            }
        }
        return color;
    };
    /**
     * Generates a timestamp.
     */
    RoundProgressService.prototype.getTimestamp = function () {
        return this._hasPerf ? window.performance.now() : Date.now();
    };
    /**
     * Generates the value for an SVG arc.
     * @param current       Current value.
     * @param total         Maximum value.
     * @param pathRadius    Radius of the SVG path.
     * @param elementRadius Radius of the SVG container.
     * @param isSemicircle  Whether the element should be a semicircle.
     */
    RoundProgressService.prototype.getArc = function (current, total, pathRadius, elementRadius, isSemicircle) {
        if (isSemicircle === void 0) { isSemicircle = false; }
        var value = Math.max(0, Math.min(current || 0, total));
        var maxAngle = isSemicircle ? 180 : 359.9999;
        var percentage = total === 0 ? maxAngle : (value / total) * maxAngle;
        var start = this._polarToCartesian(elementRadius, pathRadius, percentage);
        var end = this._polarToCartesian(elementRadius, pathRadius, 0);
        var arcSweep = (percentage <= 180 ? 0 : 1);
        return "M " + start + " A " + pathRadius + " " + pathRadius + " 0 " + arcSweep + " 0 " + end;
    };
    ;
    /**
     * Converts polar cooradinates to Cartesian.
     * @param elementRadius  Radius of the wrapper element.
     * @param pathRadius     Radius of the path being described.
     * @param angleInDegrees Degree to be converted.
     */
    RoundProgressService.prototype._polarToCartesian = function (elementRadius, pathRadius, angleInDegrees) {
        var angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;
        var x = elementRadius + (pathRadius * Math.cos(angleInRadians));
        var y = elementRadius + (pathRadius * Math.sin(angleInRadians));
        return x + ' ' + y;
    };
    return RoundProgressService;
}());
RoundProgressService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Optional()), __param(0, core_1.Inject(platform_browser_1.DOCUMENT)),
    __metadata("design:paramtypes", [Object])
], RoundProgressService);
exports.RoundProgressService = RoundProgressService;
;
//# sourceMappingURL=round-progress.service.js.map

/***/ }),

/***/ 904:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var RoundProgressConfig = (function () {
    function RoundProgressConfig() {
        this._options = {
            radius: 125,
            animation: 'easeOutCubic',
            animationDelay: null,
            duration: 500,
            stroke: 15,
            color: '#45CCCE',
            background: '#EAEAEA',
            responsive: false,
            clockwise: true,
            semicircle: false,
            rounded: false
        };
    }
    /** Configures the defaults. */
    RoundProgressConfig.prototype.setDefaults = function (config) {
        return Object.assign(this._options, config);
    };
    /** Fetches a value from the defaults. */
    RoundProgressConfig.prototype.get = function (key) {
        return this._options[key];
    };
    return RoundProgressConfig;
}());
RoundProgressConfig = __decorate([
    core_1.Injectable()
], RoundProgressConfig);
exports.RoundProgressConfig = RoundProgressConfig;
//# sourceMappingURL=round-progress.config.js.map

/***/ }),

/***/ 905:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var RoundProgressEase = (function () {
    function RoundProgressEase() {
    }
    // t: current time (or position) of the neonate. This can be seconds or frames, steps,
    // seconds, ms, whatever – as long as the unit is the same as is used for the total time.
    // b: beginning value of the property.
    // c: change between the beginning and destination value of the property.
    // d: total time of the neonate.
    RoundProgressEase.prototype.linearEase = function (t, b, c, d) {
        return c * t / d + b;
    };
    ;
    RoundProgressEase.prototype.easeInQuad = function (t, b, c, d) {
        return c * (t /= d) * t + b;
    };
    ;
    RoundProgressEase.prototype.easeOutQuad = function (t, b, c, d) {
        return -c * (t /= d) * (t - 2) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutQuad = function (t, b, c, d) {
        if ((t /= d / 2) < 1) {
            return c / 2 * t * t + b;
        }
        return -c / 2 * ((--t) * (t - 2) - 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInCubic = function (t, b, c, d) {
        return c * (t /= d) * t * t + b;
    };
    ;
    RoundProgressEase.prototype.easeOutCubic = function (t, b, c, d) {
        return c * ((t = t / d - 1) * t * t + 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutCubic = function (t, b, c, d) {
        if ((t /= d / 2) < 1) {
            return c / 2 * t * t * t + b;
        }
        return c / 2 * ((t -= 2) * t * t + 2) + b;
    };
    ;
    RoundProgressEase.prototype.easeInQuart = function (t, b, c, d) {
        return c * (t /= d) * t * t * t + b;
    };
    ;
    RoundProgressEase.prototype.easeOutQuart = function (t, b, c, d) {
        return -c * ((t = t / d - 1) * t * t * t - 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutQuart = function (t, b, c, d) {
        if ((t /= d / 2) < 1) {
            return c / 2 * t * t * t * t + b;
        }
        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;
    };
    ;
    RoundProgressEase.prototype.easeInQuint = function (t, b, c, d) {
        return c * (t /= d) * t * t * t * t + b;
    };
    ;
    RoundProgressEase.prototype.easeOutQuint = function (t, b, c, d) {
        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutQuint = function (t, b, c, d) {
        if ((t /= d / 2) < 1) {
            return c / 2 * t * t * t * t * t + b;
        }
        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;
    };
    ;
    RoundProgressEase.prototype.easeInSine = function (t, b, c, d) {
        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;
    };
    ;
    RoundProgressEase.prototype.easeOutSine = function (t, b, c, d) {
        return c * Math.sin(t / d * (Math.PI / 2)) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutSine = function (t, b, c, d) {
        return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInExpo = function (t, b, c, d) {
        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;
    };
    ;
    RoundProgressEase.prototype.easeOutExpo = function (t, b, c, d) {
        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutExpo = function (t, b, c, d) {
        if (t == 0) {
            return b;
        }
        ;
        if (t == d) {
            return b + c;
        }
        if ((t /= d / 2) < 1) {
            return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
        }
        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;
    };
    ;
    RoundProgressEase.prototype.easeInCirc = function (t, b, c, d) {
        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeOutCirc = function (t, b, c, d) {
        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutCirc = function (t, b, c, d) {
        if ((t /= d / 2) < 1) {
            return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;
        }
        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInElastic = function (t, b, c, d) {
        var s = 1.70158;
        var p = d * 0.3;
        var a = c;
        if (t == 0) {
            return b;
        }
        if ((t /= d) == 1) {
            return b + c;
        }
        if (a < Math.abs(c)) {
            a = c;
            s = p / 4;
        }
        else {
            s = p / (2 * Math.PI) * Math.asin(c / a);
        }
        return -(a * Math.pow(2, 10 * (t--)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
    };
    ;
    RoundProgressEase.prototype.easeOutElastic = function (t, b, c, d) {
        var s = 1.70158;
        var p = d * 0.3;
        var a = c;
        if (t == 0) {
            return b;
        }
        if ((t /= d) == 1) {
            return b + c;
        }
        if (a < Math.abs(c)) {
            a = c;
            s = p / 4;
        }
        else {
            s = p / (2 * Math.PI) * Math.asin(c / a);
        }
        return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutElastic = function (t, b, c, d) {
        var s = 1.70158;
        var p = d * (0.3 * 1.5);
        var a = c;
        if (t == 0) {
            return b;
        }
        if ((t /= d / 2) == 2) {
            return b + c;
        }
        if (a < Math.abs(c)) {
            a = c;
            s = p / 4;
        }
        else {
            s = p / (2 * Math.PI) * Math.asin(c / a);
        }
        if (t < 1) {
            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) *
                Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;
        }
        return a * Math.pow(2, -10 * (t -= 1)) *
            Math.sin((t * d - s) * (2 * Math.PI) / p) * 0.5 + c + b;
    };
    ;
    RoundProgressEase.prototype.easeInBack = function (t, b, c, d, s) {
        if (s === void 0) { s = 1.70158; }
        return c * (t /= d) * t * ((s + 1) * t - s) + b;
    };
    ;
    RoundProgressEase.prototype.easeOutBack = function (t, b, c, d, s) {
        if (s === void 0) { s = 1.70158; }
        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutBack = function (t, b, c, d, s) {
        if (s === void 0) { s = 1.70158; }
        if ((t /= d / 2) < 1) {
            return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;
        }
        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;
    };
    ;
    RoundProgressEase.prototype.easeInBounce = function (t, b, c, d) {
        return c - this.easeOutBounce(d - t, 0, c, d) + b;
    };
    ;
    RoundProgressEase.prototype.easeOutBounce = function (t, b, c, d) {
        if ((t /= d) < (1 / 2.75)) {
            return c * (7.5625 * t * t) + b;
        }
        else if (t < (2 / 2.75)) {
            return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;
        }
        else if (t < (2.5 / 2.75)) {
            return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;
        }
        return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;
    };
    ;
    RoundProgressEase.prototype.easeInOutBounce = function (t, b, c, d) {
        if (t < d / 2) {
            return this.easeInBounce(t * 2, 0, c, d) * 0.5 + b;
        }
        return this.easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;
    };
    ;
    return RoundProgressEase;
}());
RoundProgressEase = __decorate([
    core_1.Injectable()
], RoundProgressEase);
exports.RoundProgressEase = RoundProgressEase;
/**
 * TERMS OF USE - EASING EQUATIONS
 * Open source under the BSD License.

 * Copyright © 2001 Robert Penner
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without modification, are permitted
 * provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this list of conditions
 * and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions
 * and the following disclaimer in the documentation and/or other materials provided with the
 * distribution.
 *
 * Neither the name of the author nor the names of contributors may be used to endorse or promote
 * products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
//# sourceMappingURL=round-progress.ease.js.map

/***/ }),

/***/ 907:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var round_progress_service_1 = __webpack_require__(903);
var round_progress_config_1 = __webpack_require__(904);
var round_progress_ease_1 = __webpack_require__(905);
var RoundProgressComponent = (function () {
    function RoundProgressComponent(_service, _easing, _defaults, _ngZone, _renderer) {
        this._service = _service;
        this._easing = _easing;
        this._defaults = _defaults;
        this._ngZone = _ngZone;
        this._renderer = _renderer;
        this._lastAnimationId = 0;
        this.radius = this._defaults.get('radius');
        this.animation = this._defaults.get('animation');
        this.animationDelay = this._defaults.get('animationDelay');
        this.duration = this._defaults.get('duration');
        this.stroke = this._defaults.get('stroke');
        this.color = this._defaults.get('color');
        this.background = this._defaults.get('background');
        this.responsive = this._defaults.get('responsive');
        this.clockwise = this._defaults.get('clockwise');
        this.semicircle = this._defaults.get('semicircle');
        this.rounded = this._defaults.get('rounded');
        this.onRender = new core_1.EventEmitter();
    }
    /** Animates a change in the current value. */
    RoundProgressComponent.prototype._animateChange = function (from, to) {
        var _this = this;
        if (typeof from !== 'number') {
            from = 0;
        }
        to = this._clamp(to);
        from = this._clamp(from);
        var self = this;
        var changeInValue = to - from;
        var duration = self.duration;
        // Avoid firing change detection for each of the animation frames.
        self._ngZone.runOutsideAngular(function () {
            var start = function () {
                var startTime = self._service.getTimestamp();
                var id = ++self._lastAnimationId;
                requestAnimationFrame(function animation() {
                    var currentTime = Math.min(self._service.getTimestamp() - startTime, duration);
                    var value = self._easing[self.animation](currentTime, from, changeInValue, duration);
                    self._setPath(value);
                    self.onRender.emit(value);
                    if (id === self._lastAnimationId && currentTime < duration) {
                        requestAnimationFrame(animation);
                    }
                });
            };
            if (_this.animationDelay > 0) {
                setTimeout(start, _this.animationDelay);
            }
            else {
                start();
            }
        });
    };
    /** Sets the path dimensions. */
    RoundProgressComponent.prototype._setPath = function (value) {
        if (this._path) {
            this._renderer.setElementAttribute(this._path.nativeElement, 'd', this._service.getArc(value, this.max, this.radius - this.stroke / 2, this.radius, this.semicircle));
        }
    };
    /** Clamps a value between the maximum and 0. */
    RoundProgressComponent.prototype._clamp = function (value) {
        return Math.max(0, Math.min(value || 0, this.max));
    };
    /** Determines the SVG transforms for the <path> node. */
    RoundProgressComponent.prototype.getPathTransform = function () {
        var diameter = this._diameter;
        if (this.semicircle) {
            return this.clockwise ?
                "translate(0, " + diameter + ") rotate(-90)" :
                "translate(" + (diameter + ',' + diameter) + ") rotate(90) scale(-1, 1)";
        }
        else if (!this.clockwise) {
            return "scale(-1, 1) translate(-" + diameter + " 0)";
        }
    };
    /** Resolves a color through the service. */
    RoundProgressComponent.prototype.resolveColor = function (color) {
        return this._service.resolveColor(color);
    };
    /** Change detection callback. */
    RoundProgressComponent.prototype.ngOnChanges = function (changes) {
        if (changes.current) {
            this._animateChange(changes.current.previousValue, changes.current.currentValue);
        }
        else {
            this._setPath(this.current);
        }
    };
    Object.defineProperty(RoundProgressComponent.prototype, "_diameter", {
        /** Diameter of the circle. */
        get: function () {
            return this.radius * 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoundProgressComponent.prototype, "_elementHeight", {
        /** The CSS height of the wrapper element. */
        get: function () {
            if (!this.responsive) {
                return (this.semicircle ? this.radius : this._diameter) + 'px';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoundProgressComponent.prototype, "_viewBox", {
        /** Viewbox for the SVG element. */
        get: function () {
            var diameter = this._diameter;
            return "0 0 " + diameter + " " + (this.semicircle ? this.radius : diameter);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RoundProgressComponent.prototype, "_paddingBottom", {
        /** Bottom padding for the wrapper element. */
        get: function () {
            if (this.responsive) {
                return this.semicircle ? '50%' : '100%';
            }
        },
        enumerable: true,
        configurable: true
    });
    return RoundProgressComponent;
}());
__decorate([
    core_1.ViewChild('path'),
    __metadata("design:type", Object)
], RoundProgressComponent.prototype, "_path", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoundProgressComponent.prototype, "current", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoundProgressComponent.prototype, "max", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoundProgressComponent.prototype, "radius", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RoundProgressComponent.prototype, "animation", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoundProgressComponent.prototype, "animationDelay", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoundProgressComponent.prototype, "duration", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], RoundProgressComponent.prototype, "stroke", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RoundProgressComponent.prototype, "color", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], RoundProgressComponent.prototype, "background", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], RoundProgressComponent.prototype, "responsive", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], RoundProgressComponent.prototype, "clockwise", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], RoundProgressComponent.prototype, "semicircle", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], RoundProgressComponent.prototype, "rounded", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], RoundProgressComponent.prototype, "onRender", void 0);
RoundProgressComponent = __decorate([
    core_1.Component({
        selector: 'round-progress',
        template: "\n    <svg xmlns=\"http://www.w3.org/2000/svg\" [attr.viewBox]=\"_viewBox\">\n      <circle\n        fill=\"none\"\n        [attr.cx]=\"radius\"\n        [attr.cy]=\"radius\"\n        [attr.r]=\"radius - stroke / 2\"\n        [style.stroke]=\"resolveColor(background)\"\n        [style.stroke-width]=\"stroke\"/>\n\n      <path\n        #path\n        fill=\"none\"\n        [style.stroke-width]=\"stroke\"\n        [style.stroke]=\"resolveColor(color)\"\n        [style.stroke-linecap]=\"rounded ? 'round' : ''\"\n        [attr.transform]=\"getPathTransform()\"/>\n    </svg>\n  ",
        host: {
            'role': 'progressbar',
            '[attr.aria-valuemin]': 'current',
            '[attr.aria-valuemax]': 'max',
            '[style.width]': "responsive ? '' : _diameter + 'px'",
            '[style.height]': '_elementHeight',
            '[style.padding-bottom]': '_paddingBottom',
            '[class.responsive]': 'responsive'
        },
        styles: [
            ":host {\n      display: block;\n      position: relative;\n      overflow: hidden;\n    }",
            ":host.responsive {\n      width: 100%;\n      padding-bottom: 100%;\n    }",
            ":host.responsive > svg {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n    }"
        ]
    }),
    __metadata("design:paramtypes", [round_progress_service_1.RoundProgressService,
        round_progress_ease_1.RoundProgressEase,
        round_progress_config_1.RoundProgressConfig,
        core_1.NgZone,
        core_1.Renderer])
], RoundProgressComponent);
exports.RoundProgressComponent = RoundProgressComponent;
//# sourceMappingURL=round-progress.component.js.map

/***/ }),

/***/ 914:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_1 = __webpack_require__(65);
var round_progress_component_1 = __webpack_require__(907);
var round_progress_service_1 = __webpack_require__(903);
var round_progress_ease_1 = __webpack_require__(905);
var round_progress_config_1 = __webpack_require__(904);
var RoundProgressModule = (function () {
    function RoundProgressModule() {
    }
    return RoundProgressModule;
}());
RoundProgressModule = __decorate([
    core_1.NgModule({
        imports: [common_1.CommonModule],
        declarations: [round_progress_component_1.RoundProgressComponent],
        exports: [round_progress_component_1.RoundProgressComponent],
        providers: [round_progress_service_1.RoundProgressService, round_progress_ease_1.RoundProgressEase, round_progress_config_1.RoundProgressConfig]
    })
], RoundProgressModule);
exports.RoundProgressModule = RoundProgressModule;
;
__export(__webpack_require__(907));
__export(__webpack_require__(903));
__export(__webpack_require__(905));
__export(__webpack_require__(904));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 939:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BmicalculatorPage; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_ionic_angular__ = __webpack_require__(47);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__model_Calculator__ = __webpack_require__(902);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__providers_common_service__ = __webpack_require__(48);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





/**
 * Generated class for the BmicalculatorPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
var BmicalculatorPage = /** @class */ (function () {
    function BmicalculatorPage(navCtrl, navParams, toastController, commonService) {
        this.navCtrl = navCtrl;
        this.navParams = navParams;
        this.toastController = toastController;
        this.commonService = commonService;
        this.calculate = new __WEBPACK_IMPORTED_MODULE_2__model_Calculator__["a" /* BMICalculator */]();
        this.foots = [2, 3, 4, 5, 6, 7, 8];
        this.inches = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];
        this.result = "";
        this.max = 40;
        this.current = 10;
        this.status = "#45ccce";
        this.enteredAll = false;
        this.max = 40;
    }
    BmicalculatorPage.prototype.ionViewDidLoad = function () {
        console.log('ionViewDidLoad BmicalculatorPage');
        this.max = 40;
    };
    BmicalculatorPage.prototype.calculateBMI = function () {
        if (this.calculate.Weight != 0 && this.calculate.HeightInFoot != 0 && this.calculate.HeightInInch >= 0) {
            this.enteredAll = true;
            var bmi = this.calculate.getResult(this.calculate.Weight, this.calculate.HeightInFoot, this.calculate.HeightInInch);
            if (bmi < 18.5) {
                this.result = "Under Weight";
                this.status = "#45ccce";
            }
            else if (bmi >= 18.5 && bmi <= 24.9) {
                this.result = "Normal Weight";
                this.status = "#45ccce";
            }
            else if (bmi >= 25 && bmi <= 29.9) {
                this.result = "Over Weight";
                this.status = "#F8BC34";
            }
            else if (bmi >= 30 && bmi <= 34.9) {
                this.result = "Class I Obese";
                this.status = "red";
            }
            else if (bmi >= 35 && bmi <= 39.9) {
                this.result = "Class II Obese";
                this.status = "red";
            }
            else {
                this.result = "Class III obese";
                this.status = "red";
            }
            this.current = Math.round(bmi);
        }
        else {
            this.enteredAll = false;
            this.presentToast('Please fill all details');
        }
    };
    BmicalculatorPage.prototype.presentToast = function (msg) {
        // let toast = this.toastController.create({
        //   message: msg,
        //   duration: 5000,
        //   position: 'top'
        // });
        // toast.present();
        this.commonService.onMessageHandler(msg, 0);
    };
    BmicalculatorPage.prototype.bookAppointment = function () {
        this.navCtrl.push("BookAppointment");
    };
    BmicalculatorPage = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'page-bmicalculator',template:/*ion-inline-start:"D:\HealthProConsumerApp\src\pages\calculator\bmicalculator\bmicalculator.html"*/'<!--\n  Generated template for the BmicalculatorPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n-->\n<ion-header>\n\n  <ion-navbar>\n    <ion-title>BMI Calculator</ion-title>\n  </ion-navbar>\n\n</ion-header>\n\n\n<ion-content padding >\n    <!-- <div class="bg_image"></div> -->\n    <div class="progress_wrapper">\n      <div>\n        <round-progress\n        [current]="current"\n        [max]="max"\n        [color]="status"\n        [background]="\'#eaeaea\'"\n        [radius]="150"\n        [stroke]="25"\n        [semicircle]="false"\n        [rounded]="true"\n        [clockwise]="true"\n        [responsive]="false"\n        [duration]="800"\n        [animation]="\'easeInOutQuart\'"\n        [animationDelay]="0"></round-progress></div>\n        <div class="preogress_text">{{current}}</div>\n      </div>\n\n      <ion-col col-12 *ngIf="enteredAll">\n          <p *ngIf="enteredAll" class="result" style="margin:0px">{{result}}</p>\n      </ion-col>\n  <!-- <ion-list class="list">\n    <ion-row>\n      <ion-col col-12 class="col-padding-0">\n          <ion-label >Weight</ion-label>\n      </ion-col>\n    </ion-row>\n    <ion-row class="margin-bottom-5">\n      <ion-col col-10 class="col-padding-0">\n        <ion-item style="border-bottom: 1px solid #e0e0e0 !important; box-shadow: 0px 1px 0px -1px #488aff !important;;">         \n          <ion-input type="number" placeholder="Enter your weight" [(ngModel)]="calculate.Weight" ></ion-input>\n        </ion-item>\n      </ion-col>\n      <ion-col col-2 class="padding-top-20">\n        Kgs\n      </ion-col>\n    </ion-row>\n    <ion-row>\n        <ion-col col-12 class="col-padding-0"><ion-label >Height</ion-label></ion-col>\n\n        <ion-col col-6 class="mar_col">\n            <ion-item class="padding-left-0" class="item-border-bottom" style="box-shadow: 0px 1px 0px -1px #488aff !important;;">\n              <ion-label class="header_label">Feet</ion-label>\n              <ion-select [(ngModel)]="calculate.HeightInFoot" style="border-right: 0px dashed gainsboro;">\n                <ion-option value={{num}} *ngFor="let num of foots" >{{num}}</ion-option>\n              </ion-select>\n            </ion-item>\n          </ion-col>\n          <ion-col col-5 class="mar_col">\n            <ion-item class="padding-left-0" class="padding-left-0" class="item-border-bottom" style="box-shadow: 0px 1px 0px -1px #488aff !important;;">\n              <ion-label class="header_label">Inches</ion-label>\n              <ion-select [(ngModel)]="calculate.HeightInInch" style="border-right: 0px dashed gainsboro;">\n                <ion-option value={{num}} *ngFor="let num of inches" >{{num}}</ion-option>\n              </ion-select>\n            </ion-item>\n          </ion-col>\n    </ion-row>\n    <ion-row> -->\n     \n      <!-- <ion-col col-4 class="col-padding-0">\n        <ion-item>        \n          <ion-input type="number" placeholder="Feet" [(ngModel)]="calculate.HeightInFoot" ></ion-input>\n        </ion-item>     \n      </ion-col>\n     <ion-col col-2 class="padding-top-20">Ft</ion-col>\n      <ion-col  col-4 class="col-padding-0">\n        <ion-item>\n          <ion-input type="number"  placeholder="Inches"  [(ngModel)]="calculate.HeightInInch" ></ion-input>\n        </ion-item>\n      </ion-col>\n      <ion-col col-2 class="padding-top-20">Inches</ion-col> -->\n    <!-- </ion-row>\n  \n  </ion-list>\n  <button ion-button block (click)="calculateBMI()">Calculate</button> -->\n  <!-- <p *ngIf="enteredAll" class="result">{{result}}</p> -->\n\n  \n\n  <ion-col col-12>\n    <div style="width:70%;margin:0 auto">\n    <ion-row>\n        <ion-col col-6 text-center>\n            <p style="margin:0px">Male</p>\n            <img src="assets/imgs/calculator/male.png" class="gendercls">\n          </ion-col>\n          <ion-col col-6 text-center>\n              <p style="margin:0px">Female</p>\n              <img src="assets/imgs/calculator/female.png" class="gendercls">\n          </ion-col>      \n    </ion-row>\n  </div>\n    \n  </ion-col>\n  \n    <ion-col col-12 no-padding>\n      <ion-row>\n        <ion-col col-4>\n          <p class="text_col">Weight(kgs)</p>\n          <ion-input type="number" placeholder="Kgs" [(ngModel)]="calculate.Weight" ></ion-input>\n        </ion-col>\n        <ion-col col-4>\n          <p class="text_col">Height(ft)</p>\n          <ion-input type="number" placeholder="Feet" [(ngModel)]="calculate.HeightInFoot"></ion-input>\n        </ion-col>\n        <ion-col col-4>\n          <p class="text_col">Height(inch)</p>\n          <ion-input type="number" placeholder="Inches" [(ngModel)]="calculate.HeightInInch"></ion-input>\n        </ion-col>\n      </ion-row>\n\n    </ion-col>\n\n    <ion-row>\n        <ion-col col-12 no-padding style="">\n            <button ion-button block full (click)="calculateBMI()">Calculate</button>\n        </ion-col>\n      </ion-row>\n\n      <ion-col col-12  class="suggestions_col" *ngIf="enteredAll">\n      \n          <ion-row>\n            <!-- <ion-col col-10  color="primary" >\n              <p class="Cal_header">Suggestions</p>\n            </ion-col> -->\n            <ion-col col-12 >\n                <!-- Under Weight,Normal Weight,Over Weight,Class I Obese,Class III obese -->\n               <p class="cal_des" *ngIf="(result===\'Under Weight\' || result===\'Normal Weight\' )" >\n                 <strong>Your BMI is under control</strong>\n               </p>\n               <ion-row *ngIf="!(result===\'Under Weight\' || result===\'Normal Weight\' )">\n               <p class="cal_des" >\n                  <strong>Your BMI is high, You may consult the doctor for immediate assistance.</strong>\n               </p>\n                <p class="appointment_book" (click)="bookAppointment()"><strong>Please Book Your Appointment Here \n                  <!-- <ion-icon name="ios-arrow-forward"></ion-icon> -->\n                </strong></p>\n              </ion-row>\n              <ion-row *ngIf="(result===\'Class II Obese\' || result===\'Class III obese\' )">\n                <p class="cal_des" >\n                    <strong>Your BMI is very high, You may consult the doctor for immediate assistance</strong>\n                </p>\n                <p class="appointment_book" (click)="bookAppointment()"><strong>Please Book Your Appointment Here \n                   </strong></p>\n              </ion-row>\n            </ion-col>\n          </ion-row>\n      </ion-col>\n\n  <ion-col col-12  class="Cal_Des" >\n      <ion-row>\n        \n        <ion-col col-12 >\n           <p class="cal_des"><strong>What is a Body Mass Index (BMI)?</strong></p>\n              <p class="cal_des">Body Mass Index (BMI) is a measure of body fat based on height and weight.\n            </p>\n        </ion-col>\n      </ion-row>\n  </ion-col>\n\n  <ion-col col-12 >\n    <ion-row class="disclaimer_wrapper">\n      <ion-col col-10  color="primary" >\n        <p class="disclaimer_header">Disclaimer</p>\n      </ion-col>\n      <ion-col col-12 >\n        <p class="disclaimer_des">The health information provided by our mobile application and all the calculators is for general information and guidance purposes only and is never a substitute for medical health device and professional advice. Accordingly before taking any actions based upon this information from this app, we strongly advise you to consult with an appropriate medical and healthcare professionals.\n        </p>\n      </ion-col>\n    </ion-row>\n  </ion-col>\n\n</ion-content>\n\n'/*ion-inline-end:"D:\HealthProConsumerApp\src\pages\calculator\bmicalculator\bmicalculator.html"*/,
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1_ionic_angular__["o" /* NavController */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["p" /* NavParams */], __WEBPACK_IMPORTED_MODULE_1_ionic_angular__["v" /* ToastController */], __WEBPACK_IMPORTED_MODULE_3__providers_common_service__["a" /* CommonServices */]])
    ], BmicalculatorPage);
    return BmicalculatorPage;
}());

//# sourceMappingURL=bmicalculator.js.map

/***/ })

});
//# sourceMappingURL=26.js.map